pipeline {
    agent any

    environment {
        Base_PATH = 'C:\\ProgramData\\Jenkins\\.jenkins\\workspace\\angular-build\\angular-project\\sample-angular-17-project\\'
    }

    tools {
        nodejs 'nodejs-lts'
    }

    stages {
        stage("Pulling code from Github") {
            steps {
                script {
                    deleteDir()
                    bat "git clone https://github.com/sharsh15/angular-project.git"
                }
                echo "Cloned repository successfully."
            }
        }

        stage("Installing dependencies") {
            steps {
                bat """
                    cd ${env.Base_PATH}
                    npm install
                    npm --version
                """
                echo "Dependencies installed"
            }
        }

        stage("Building Angular App") {
            steps {
                 bat """
                    cd ${env.Base_PATH} && "npx ng build --configuration production
                """
                echo "Angular app successfully completed"
            }
        }

        stage("Dockerizing the angular app") {
            steps {
                bat """
                    cd ${env.Base_PATH}
                    docker build -t harsh1510/angular-app:version1 .
                """
                echo "Docker image built"
            }
        }

        stage("Docker Hub Login") {
            steps {
                withCredentials([usernamePassword(credentialsId: 'dockerhub-credentials', usernameVariable: 'DOCKERHUB_USER', passwordVariable: 'DOCKERHUB_PASS')]) {
                    echo "Logging into Docker Hub"
                    bat """
                        echo %DOCKERHUB_PASS% | docker login -u %DOCKERHUB_USER% --password-stdin
                    """
                }
            }
        }

        stage("pushing the docker image to docker hub") {
            teps {
                echo "Pushing Docker image to Docker Hub"
                bat "docker push harsh1510/angular-app"
            }
        }
    }
}